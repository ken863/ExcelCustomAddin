name: Build and Publish Docker Image

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: excel-custom-addin

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ExcelCustomAddin/Macos/ExcelCustomAddinMacOS
        file: ./ExcelCustomAddin/Macos/ExcelCustomAddinMacOS/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        docker run --rm -d --name test-container -p 3000:3000 ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop test-container

    - name: Generate deployment manifests
      if: github.event_name != 'pull_request'
      run: |
        mkdir -p deployment
        echo "version: '3.8'" > deployment/docker-compose.yml
        echo "services:" >> deployment/docker-compose.yml
        echo "  excel-addin:" >> deployment/docker-compose.yml
        echo "    image: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> deployment/docker-compose.yml
        echo "    ports:" >> deployment/docker-compose.yml
        echo "      - '3000:3000'" >> deployment/docker-compose.yml
        echo "    restart: unless-stopped" >> deployment/docker-compose.yml

    - name: Upload deployment artifacts
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: deployment-manifests
        path: deployment/
